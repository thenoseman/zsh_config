#!/usr/bin/env zsh
# vim: set ft=sh:
# shellcheck disable=SC2034
source ~/.zsh/config/functions

typeset -a BREW_TAPS
typeset -a BREW_CASKS
typeset -a BREW_PACKAGES
typeset -a ALLOW_FIREWALL_INCOMING

SKIP_RUBY=1

BREW_TAPS=(
	universal-ctags/universal-ctags # ctags tool
)

BREW_PACKAGES=(
	bat                         # a 'cat' clone
	biome                       # A very fast formatter/linter for TS/JS/JSON
	colima                      # Alternative to docker desktop for Mac
	coreutils                   # Base tools for every OS
	curl                        # For libcurl
	direnv                      # Manage environment per directory (also used for tools management)
	docker                      # -> colima
	docker-completion           # -> colima
	docker-compose              # -> colima
	docker-credential-helper    # -> colima
	doggo                       # Command-line DNS client for humans
	dust                        # Alternative to "du"
	eza                         # Alternative to "ls" (fork, active)
	exiftool                    # Manipulate image EXIF data
	ffmpeg                      # Video conversion
	findutils                   # find, xargs, and locate
	fx                          # Like jq but using JS and interactive
	fzf                         # Fuzzy finder. Used everywhere in my config
	git                         # Version management software
	git-delta                   # Better git diff
	gnu-tar                     # GNU tar for MacOs
	groff                       # groff for fzftab
	gsed                        # GNU sed for MacOs
	imagemagick                 # Image manipulation tools
	jhead                       # Lossless JPG auto rotation
	jq                          # Manipulate, format and filter JSON
	jump                        # directory autojump, alternative to zoxide
	lima-additional-guestagents # Additional guests for colima/lima
	lua                         # For hammerspoon lib includes
	node                        # node JS
	node-build                  # More node versions. Used in "install_node" function.
	oath-toolkit                # OTP token management/creation
	openconnect                 # VPN client
	openssl                     # Newer version of openssl than present in MacOs
	pstree                      # tree view of directories
	python@3.11                 # python 3.11
	readline                    # GNU readline (For ruby I think)
	ripgrep                     # The best file search tool
	ruby-build                  # Build ruby versions into ~/.rubies
	rustup                      # rust toolchain
	selene                      # LUA formatter
	shellcheck                  # shell script linter
	shfmt                       # shell script formatter
	sqlite                      # sqlite tools
	stylua                      # Format lua code
	syncthing                   # Sync data between computers
	tig                         # TUI for git
	watch                       # GNU watch
	watchman                    # File watcher by facebook
	wireguard-tools             # wireguard userland tools
	yamllint                    # Lint YAML files
	yt-dlp                      # Download youtube videos
	zsh                         # newer zsh
)

BREW_CASKS=(
	android-platform-tools # adb
	aws-vault              # AWS cred management
	disk-inventory-x       # Find large files
	hammerspoon            # Control the mac via lua
	iterm2                 # Terminal
	itsycal                # Small menubar calendar
	kdiff3                 # Diff/Merge tool
	keka                   # Archive compression/decompression
	kekaexternalhelper     # keka as defautl extractor for all known formats
	keepassxc              # Passwords
	macvim                 # Editor
	music-decoy            # Do not autostart music.app when devices connect
	namechanger            # File renamer GUI
	qlimagesize            # QuickLook Plugin: Image Info
	qlmarkdown             # Quicklook Plugin: Markdown
	quicklook-json         # Quicklook Plugin: JSON
	shottr                 # Menubar screenshot utility
	typora                 # Markdown editor
	vlc                    # Video player
)

NODE_PACKAGES=(
	eslint   # Pluggable Javasxript linter/fixer (https://eslint.org/)
	jsonlint # Pure Js JSON linter (https://github.com/zaach/jsonlint)
	pnpm     # Alternative to npm (https://pnpm.io/)
	prettier # JS/JSON etc formatter
)

RUBY_GEMS=(
	pry-byebug
)

# List og binaries that should be allow thru the firewall
# Those might be brew links ansd thus must be resolved to their realpath
ALLOW_FIREWALL_INCOMING=(
	syncthing
)

#
# Actual code
#
script_dir=$(cd "$(dirname "${BASH_SOURCE[0]:-$0}")" &>/dev/null && pwd -P)

msg() {
	echo -e "${*-}" | box 33
}

update_zsh_config() {
	msg "update_zsh_config"
	[ -e ~/dev/config/zsh_config ] && cd ~/dev/config/zsh_config && git pull --rebase --autostash
}

update_vim_config() {
	msg "update_vim_config"
	[ -e ~/dev/config/vim_config ] && cd ~/dev/config/vim_config && git pull --rebase --autostash
}

install_missing_brew_formulas() {
	msg "install_missing_brew_formulas"
	# Check installed packages
	INSTALLED=$(brew list --formula -1 | tr '\n' ' ')
	for p in "${BREW_PACKAGES[@]}"; do
		if [[ "${INSTALLED}" != *$p* ]]; then
			echo "brew install ${p}"
			brew install "${p}" || true
		fi
	done
}

install_missing_brew_casks() {
	msg "install_missing_brew_casks"
	# Check install casks
	INSTALLED=$(brew list --casks -1 | tr '\n' ' ')
	for p in "${BREW_CASKS[@]}"; do
		if [[ "${INSTALLED}" != *$p* ]]; then
			brew install --cask "${p}" || true
		fi
	done
}

install_missing_brew_special_cases() {
	msg "install_missing_brew_special_cases"
	if ! brew ls --versions universal-ctags; then
		brew install --fetch-HEAD --HEAD universal-ctags
	fi
}

update_rubygems() {
	msg "update_rubygems"
	gem update --system
}

update_gems() {
	msg "update_gems"
	gem install "${RUBY_GEMS[@]}"
}

update_js_tools() {
	msg "update_js_tools"
	NODE_OPTIONS="--disable-warning=ExperimentalWarning"
	for p in "${NODE_PACKAGES[@]}"; do
		npm install -g "${p}"
	done
}

update_hammerspoon_seal_plugin_data() {
	msg "update_hammerspoon_seal_plugin_data"
	# hammerspoon seal plugin "aws someawsdskkeyword"
	node "$HOME/.hammerspoon/Spoons/Seal.spoon/aws-js-sdk/generate.mjs"

	# hammerspoon seal plugin "aws_someterraformawsresource"
	"$HOME/.hammerspoon/Spoons/Seal.spoon/aws-terraform/generate.sh"

	# hammerspoon seal plugin "n somenodesdkkeyword"
	"$HOME/.hammerspoon/Spoons/Seal.spoon/node-js/generate.sh"

	# hammerspoon seal plugin "mdn somethingonmdn"
	"$HOME/.hammerspoon/Spoons/Seal.spoon/mdn/generate.sh"

	# hammerspoon seal plugin "dom something"
	#"$HOME/.hammerspoon/Spoons/Seal.spoon/dom/generate.sh"
}

install_special_cases() {
	msg "install_special_cases"
	DL=$(curl -s https://api.github.com/repos/boyter/cs/releases/latest | jq -r ".assets[] | select(.name | test(\"Darwin_$(arch)\")) | .browser_download_url")
	curl -L -q -s -o "/tmp/cs.tar.gz" "$DL"
	tar xzf /tmp/cs.tar.gz -C /tmp
	mv /tmp/cs "$HOMEBREW_PREFIX/bin/"
	chmod +x "$HOMEBREW_PREFIX/bin/cs"

	# Link docker plugin(s)
	if [[ ! -d ~/.ddocker/cli-plugins ]]; then
		mkdir -p ~/.docker/cli-plugins
		ln -sfn "$HOMEBREW_PREFIX/opt/docker-compose/bin/docker-compose" "$HOME/.docker/cli-plugins/docker-compose"
	fi
}

allow_firewall_incoming() {
	msg "allow_firewall_incoming"
	for p in "${ALLOW_FIREWALL_INCOMING[@]}"; do
		path=$(realpath $(which ${p}))
		/usr/libexec/ApplicationFirewall/socketfilterfw --add "${path}"
	done
}

# update homebrew taps
for tap in $BREW_TAPS; do
	[[ ! $installed_taps =~ $tap ]] && brew tap "$tap"
done

update_zsh_config
update_vim_config
install_missing_brew_casks
install_missing_brew_special_cases
install_missing_brew_formulas
brew upgrade
update_js_tools
update_hammerspoon_seal_plugin_data
install_special_cases
allow_firewall_incoming
if [[ "${SKIP_RUBY}" == "0" ]]; then
	update_rubygems
	update_gems
fi

/usr/bin/xattr -r ~/Library/QuickLook >/dev/null
/usr/bin/xattr -d -r com.apple.quarantine ~/Library/QuickLook >/dev/null
