# Extend standard-lib
# https://direnv.net/man/direnv-stdlib.1.html
# 
# Usage: use ruby <version>
# Loads the specified ruby version into the environment
use_ruby() {
  source_up_if_exists
  search_version=$(semver_search "$HOME/.rubies" "" "${1}")
  local dir="$HOME/.rubies/${search_version}"

  PATH_add $dir
  load_prefix $dir
}

# Use newest version of node specified.
# Usage: use node <version>
# For installation see "install_node" function.
# Relies on NODE_VERSIONS being set.
use_node() {
  source_up_if_exists
  search_version=$(semver_search "$NODE_VERSIONS" "" "${1}")
  local dir="${NODE_VERSIONS}/${search_version}"

  PATH_add $dir
  load_prefix $dir
  layout node
}

# Activate a specified terraform version
# The binary must be installed into $HOMEBREW_PREFIX as "terraform-<version>" 
# See install_terraform function
# Works with the binstubs generated by "aws-vault-generate-binstubs.sh"
# Usage: use terraform 1.5.0
use_terraform() {
  source_up_if_exists
  if [ ! -e "$HOMEBREW_PREFIX/bin/terraform-${1}" ]; then
    echo "$HOMEBREW_PREFIX/bin/terraform-${1} doesn't exist!" && exit 1 
  fi
  export AWS_TERRAFORM_BIN_OVERRIDE="terraform-${1}"
}
